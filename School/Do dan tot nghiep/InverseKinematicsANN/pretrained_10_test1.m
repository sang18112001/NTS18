function [Y,Xf,Af] = pretrained_10_test1(X,~,~)
%PRETRAINED_10_TEST1 neural network simulation function.
%
% Auto-generated by MATLAB, 11-Dec-2023 20:49:04.
% 
% [Y] = pretrained_10_test1(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 3xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0.050015307656058;0;-6.28996925726433e-06];
x1_step1.gain = [9.52646325174905;13.3344725140591;8.00048668041704];
x1_step1.ymin = -1;

% Layer 1
b1 = [5.0546486950775406655;-5.7331876895977345043;-4.2572712755301411747;-4.5219754454769480745;4.1786484179487093371;-4.1974589638302131078;3.6604716092945688288;3.8405419125795505764;3.7917590035272623616;-3.1738837956259446926;-3.3271738520345710555;-2.5606616820328631512;-2.7427811675262634417;2.5399793029761461582;2.4397680495637117382;3.1162598663637286478;-1.3432389431552611558;1.8501963938998202686;1.0718781053555517246;1.4003136316209086054;1.0269672997082586186;1.7174618258082170463;-0.0063263762973761288044;0.09022983862647517006;-0.19213881512044084232;-0.42311983875132841426;-0.4926777822548111252;-0.039777654652383510892;-0.65928739535238800595;0.97589024617540820472;-1.4259865459217240247;1.1689057249481193956;-1.1578053154638869859;1.7176388258478849647;-2.1578769671009405684;2.2216222608239366565;2.5338254677927802838;-2.8241836375703943673;-2.8758802200730948506;-2.8183009588741194662;-3.5782376434125766629;-3.5042508851707854234;-4.0198878006642688732;-3.4341922935299842301;4.0390414937272582918;-4.3353130235393120273;-4.3312069136410480397;-5.2952287188311446542;-4.9817590476176256686;-4.8175959675422213024];
IW1_1 = [-2.7788225270000923572 -4.4226946945807705802 -0.21846500013366479398;1.970640454927875318 3.994665279199149488 0.39249354479007381169;2.7925195564394496017 -2.2939066852405667341 -2.8886006485033277613;1.7428193367327999841 1.808402666885710719 4.4630636593527510669;-1.6486233030609287464 -2.977631716982449106 3.405121325040408653;3.2958605741619573237 3.9257382467041619378 -0.004217265777670333067;-3.4630948921998929713 0.32465025280284559583 -2.9228667485999220155;-2.5482524841996401221 2.67336298179631493 -2.138537957196194661;-1.6730583387651269955 2.0838251852194162872 3.1061909902237427872;2.8413672666742089135 -0.88107997832910378566 -3.8668694373743819348;3.0296423342540688139 1.2267774891635196965 -3.361103071006729337;1.2881209484338864701 -2.6859389750643276606 -4.0515552722669765373;0.057466977453140513643 0.3044258863750556876 -4.563672205297510942;-3.2980538617554913117 2.1305512204410308463 -2.5916805357827494838;-3.3695098949486479434 -2.5823763521038571866 2.4385429835521996722;-5.0952920050208172498 -2.9166338824130222385 -0.52379556097653023894;3.149866682949657104 -2.1640677041338314268 -2.2171888353698090413;-0.96853749644170583633 3.8328856879483881315 -2.0376279445557963221;-2.0621715388892125631 -4.4418406952107725161 -0.33512117810179337107;-2.7822948527464386181 -3.2021579099535766311 -2.9037456360137872124;-2.629379797037810107 -3.1638730570732622738 -3.0155344852322065741;-0.90754742781096575666 -3.2404623138883912326 -3.6466638261004207244;-2.5146523067342743119 1.7657000455138440742 3.0102541570583598585;0.78266400340034480987 4.5737070281547005379 1.8568240341962254369;1.8331493019077540474 -4.2230574771758959685 -0.94241949816320447209;0.83574247639197163373 -4.4826388756983552852 1.5856600330012995403;-0.87483379070402589317 -4.037427611020632412 -1.9080002647934239945;3.0703661585001058576 -3.0233304540626555479 -2.4080515873611503253;-2.3249077357885608031 -4.5913284883194878105 -1.9642342348894203941;3.1538426708281201982 -0.55759070474879801615 3.2508842389525356431;-1.7180646440425846322 -4.5946897389608647444 0.4434130660038273497;2.8084407143786793704 3.1124282928790778513 -2.8244033629621227988;-1.706686217610244638 1.7611893181305657841 -3.5138508956252785254;2.472526348918219874 -0.0417155482043735093 -2.9733389550709614646;-1.964319083836785218 -4.2221167795566145742 -0.30637647986485527785;3.8838620393268952213 0.066305215723167429398 -2.6723139705477358952;2.6637726838346797997 2.4320909359177464992 2.655510775718030736;-0.63919798756265810979 1.3825825729392424712 4.8306546128575673649;-1.8601083983890376317 -1.3387703348601602826 2.9483309149322471931;-0.54045133248237520185 -4.8545712868038171095 1.8511806972737341326;-0.46894991051142020932 3.7629533131476833319 3.3982919515120815213;-1.1157424530018640318 -3.4487246189529847662 2.6635000014624248266;-4.3454165120150323176 0.60088158067782881933 1.4206254504959763274;-1.0455685425822400791 4.2658788449775109086 2.9786726633086404448;2.4988900054277269902 0.40184833304248152031 -2.8741563493700006404;-3.2738232130776401263 -3.3918715918705286683 1.8195650304103989647;-1.2020147552730071627 3.7522516741564779785 -3.0783302043947498028;-2.0379174197011700187 -3.2323426910864823114 -2.1916944373597786466;-0.4346930727638184111 1.5791042035960296541 -4.7114986279916530876;-3.038098549124253811 3.7408150980807421959 -1.9906694000112621357];

% Layer 2
b2 = [0.71624524915689402604;0.21566607933433562527;0.78433437318016452355];
LW2_1 = [-0.88526568688412410335 0.62013368250949318927 0.26453600295093826489 0.56524820474649539737 0.19374376336640306007 -0.28743381399482953453 -0.048052053185938976843 -0.0064408973156367356136 -0.027972855754282679314 -0.037486889182745931903 0.060272620846953964269 0.0090926392813602905513 0.017362182639934699291 0.0032741439213375216587 0.0076191324105044592324 -0.0096622121700268362443 0.017081752635527636119 0.041063544486248250431 -0.22342636176310462504 0.73723431141540241018 -0.16559057568401702731 0.0010982059511676026814 0.39828623081117059401 0.16101160428593236373 -0.22240924800689829133 -0.88670576858651650731 0.22702876697547016982 -0.011152923990879290428 0.10566989948934221721 0.00048361844392745865313 0.082204171398469985665 -0.22325969571845016848 -0.023049191992332924289 0.42363444292124496915 0.061474869512415743211 0.0012542089208474487862 0.0034355688857402250438 0.00063340512272221116165 0.016181122825473247956 0.1773019521924055486 0.0068114768072576291347 0.01399477915154305474 -0.0059999012473760876887 -0.51049801396147354016 0.0094223741588573654837 0.015519277129391060091 0.041956309192913397721 -0.0063236025436132639946 0.03515403929242618547 0.12113770079834892957;-0.072535666204477433627 0.30565193133996992891 -0.82755999006621816516 0.86408327753687785844 -0.1432769258847417515 -0.28746725086141944328 0.31417900985684565907 0.16369658583011867381 0.17181773196948102456 0.12088562742846428733 -0.10650541390676543374 0.03284255416274268341 0.1409511400205764875 -0.024105712934012542281 -0.049319581252316141429 0.63528762229305579812 -0.063615699309669843098 -0.63527388807265550152 0.2196811416576479048 0.41506600677723093362 -1.0940427906296230631 0.13524774538784953282 0.011352578971074150233 0.16486520501234244729 0.0011626050280681378066 -0.14707852739727109159 0.17473026302063349169 -0.11600769677928048085 -0.16029858752712927705 -0.031277961825797721829 0.23465487291277417614 0.73153410183713452053 -0.018721007872551109069 -0.2559487957012394066 -0.23834190822857209691 0.016627126216455477559 -0.090334700336485024286 -0.040660660583129483447 -0.16688766512413893972 0.65394412796881917771 0.90535222588422603618 0.2753868683177427279 0.12774379038386585172 -0.23106329819659984781 0.0073279473464013828582 -0.034915819408639539589 0.033887108188899853212 0.18814016792049678695 -0.29178747021175688303 -0.035361428156291396796;-0.30507957361146398334 -0.7910443919966975157 0.03832295409589842744 0.11563592923265425538 0.083793427916205143191 0.17154796309535641496 -0.3506966379429494185 -0.22936314543302149804 -0.17529788207567315039 -0.084849912112537950737 0.13669605852548974423 -0.056533141001756950783 0.036947264902408981369 0.0071032619786054601585 0.053255987879636645932 -1.0166125716142437874 0.060673640262026519443 -0.14167864206039498809 -0.34559834808172040788 0.13132367746731618552 0.53984666653923363278 0.22829663219466306279 -0.073015079899675941477 -0.42308009031647364484 0.058774874499426331409 0.2107396052200544434 -0.55520255898539794259 0.044110301777593029227 0.32110115563271568462 0.070154866989773148611 -0.13581059583330618024 0.0094616051656280820981 0.020678504672396697678 0.051660864018885234439 0.010320365728511998737 0.0052483697657519584948 0.13505613302333371872 0.048605996135194527719 0.17933536932445290346 -0.24079738368695591255 -0.38960790525110799987 -0.1635421499191834771 -0.026854183378247343389 0.66854157520085821798 -0.10164268914022045465 0.038123145014600998137 -0.10413566850420019616 -0.14267596918784258841 0.26074050574157836557 -0.029094110355421642922];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [1.74403571741344;0.964569502683839;0.800698620563121];
y1_step1.xoffset = [0;0.208258648908721;-2.74702687782755];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
